/* KEY POSITIONS (using keypos_def helpers)
╭─────────────────────┬─────────────────────╮
│ LT4 LT3 LT2 LT1 LT0 │ RT0 RT1 RT2 RT3 RT4 │
│ LM4 LM3 LM2 LM1 LM0 │ RM0 RM1 RM2 RM3 RM4 │
│ LB4 LB3 LB2 LB1 LB0 │ RB0 RB1 RB2 RB3 RB4 │
╰───────╮ LH2 LH1 LH0 │ RH0 RH1 RH2 ╭───────╯
        ╰─────────────┴─────────────╯       */

#define COMBO(NAME, BINDINGS, KEYPOS, LAYERS, TERM, QUICKTAP, ...) \
    combo_##NAME { \
        timeout-ms = <TERM>; \
        bindings = <BINDINGS>; \
        key-positions = <KEYPOS>; \
        layers = <LAYERS>; \
        require-prior-idle-ms = <QUICKTAP>; \
        __VA_ARGS__ \
    };

/ {
  combos {
    compatible = "zmk,combos";

    #ifdef BERYLLINE
    COMBO(mouse,  &tog MOUSE,    LB3 LB2 LB1, DEF MOUSE,    100, 100)
    
    COMBO(polish, &tog POL,      LT3 LT2 LT1, DEF POL,     100, 100)
    COMBO(semi,   &kp SEMI,      RB1 RB2 RB3, DEF SYM POL,     40, 100)
    COMBO(colon,  &kp COLON,     RT3 RT4,     DEF SYM POL,     40, 100)

    COMBO(btclr,  &bt BT_CLR,    RB2 RB3,     FUN,          100, 200)
    COMBO(bootld, &bootloader,   LT0 RT0,     FUN,          100, 500) 
    /* COMBO(esc,    &kp ESC,       LM3 LM2 LM1, DEF SYM,      40,   0) */ 
    COMBO(ret,    &kp RET,       RM1 RM2 RM3, DEF SYM POL,      40,   0) 

    COMBO(lpar,   &kp LPAR,      LM3 LM1,     DEF SYM POL,  40, 100)
    COMBO(rpar,   &kp RPAR,      RM1 RM3,     DEF SYM POL,  40, 100)
    COMBO(lbkt,   &kp LBKT,      LM3 LM2,     DEF SYM POL,  40, 100)
    COMBO(rbkt,   &kp RBKT,      RM2 RM3,     DEF SYM POL,  40, 100)


    COMBO(sqt,    &kp SQT,       RT1 RT2,     DEF SYM POL,  40, 100)
    COMBO(grave,  &kp GRAVE,     RT2 RT3,     DEF SYM POL,  40, 100)

    COMBO(excl,   &kp EXCL,      LT2 LT1,     SYM,          40, 100) 
    
    COMBO(k,      &kp K,         RB1 RB2,     POL,          80,  50)
    COMBO(m,      &kp M,         RB1 RB2,     DEF,          80,  50)
    COMBO(h,      &kp H,         RB1 RB2,     POL,          80,  50)

    COMBO(z,      &kp Z,         LB3 LB2,     DEF,          80,  50)
    COMBO(x,      &kp X,         LB3 LB2,     POL,          80,  50)
    COMBO(slsh,   &kp SLASH,     RB2 RB3,     DEF POL,      40,  50)

    #endif

    COMBO(q,      &kp Q,         LT3 LT2,     DEF POL,      80,  50)
    COMBO(j,      &kp J,         LT2 LT1,     DEF POL,      80,  50)
    COMBO(v,      &kp V,         LB2 LB1,     DEF POL,      40,  50)
    
        
    #ifdef KYRIA
    COMBO(m, &kp M, RB1 RB2,        DEF,  80,  50)
    COMBO(z, &kp Z, LB3 LB2,        DEF,  80,  50)

    COMBO(slsh,   &kp SLASH,     RB2 RB3,     DEF,          40,  50)

    COMBO(studiounlock, &studio_unlock,   RT0 RT1 RT2,     DEF, 100, 500) 

    COMBO(semi,   &kp SEMI,      RB1 RB2 RB3, DEF,     40, 100)
    COMBO(colon,  &kp COLON,     RT3 RT4,     DEF,     40, 100)

    COMBO(sqt,    &kp SQT,       RT1 RT2,     DEF,          40, 100)
    COMBO(grave,  &kp GRAVE,     RT2 RT3,     DEF,          40, 100)
    #endif


      /* COMBO(tab,    &kp TAB,       LM2 LM1,     DEF SYM,  40, 100) */
      /* COMBO(bspc,   &kp BSPC,      RM1 RM2,     DEF SYM,  40, 100) */
   

      /* COMBO(play,   &kp C_PP,      LT0 LM0,     NAV,         200, 200) */
      /* COMBO(calc,   &kp C_AL_CALC, RT0 RM0,     NAV,         200, 200) */

      /* COMBO(indbat, &ind_bat,      LT2 RT2,     FUN,         100, 200) */
      /* COMBO(indcon, &ind_con,      LT1 RT1,     FUN,         100, 200) */
    
  };
};
